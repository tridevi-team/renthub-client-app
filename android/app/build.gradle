plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.tridevi.rent_house"
    compileSdk = 34


    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.tridevi.rent_house"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 26
        targetSdk = 34
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    signingConfigs {
        product {
            keyAlias 'dHJpZGV2aV9yZW50aG91c203U='
            keyPassword 'password'
            storeFile file('src/product/renthub_key.jks')
            storePassword 'password'
        }

        staging {
            keyAlias 'dHJpZGV2aV9yZW50aG91c2Vfc3RhZ203luZw=='
            keyPassword 'password'
            storeFile file('src/staging/renthub_staging_key.jks')
            storePassword 'password'
        }
    }

    flavorDimensions "default"

    productFlavors {
        staging {
            dimension "default"
            applicationIdSuffix ".staging"
            resValue "string", "app_name", "UAT Rent House"
            resValue "string", "scheme", "staging-renthouse"
        }
        product {
            dimension "default"
            resValue "string", "app_name", "Rent House"
            resValue "string", "scheme", "renthouse"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig null
            productFlavors.staging.signingConfig signingConfigs.staging
            productFlavors.product.signingConfig signingConfigs.product
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig null
            productFlavors.staging.signingConfig signingConfigs.staging
            productFlavors.product.signingConfig signingConfigs.product
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        assembleDebug {
            signingConfig null
            productFlavors.staging.signingConfig signingConfigs.staging
            productFlavors.product.signingConfig signingConfigs.product
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        assembleRelease {
            debuggable false
            minifyEnabled true
            shrinkResources true
            signingConfig null
            productFlavors.staging.signingConfig signingConfigs.staging
            productFlavors.product.signingConfig signingConfigs.product
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        bundleRelease {
            debuggable false
            minifyEnabled true
            shrinkResources true
            signingConfig null
            productFlavors.staging.signingConfig signingConfigs.staging
            productFlavors.product.signingConfig signingConfigs.product
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.4.0')
}